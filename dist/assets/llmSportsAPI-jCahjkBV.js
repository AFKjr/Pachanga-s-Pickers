var h=Object.defineProperty;var u=(o,e,a)=>e in o?h(o,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[e]=a;var c=(o,e,a)=>u(o,typeof e!="symbol"?e+"":e,a);import{s as m}from"./index-BfovKIme.js";class w{constructor(){c(this,"openaiApiKey");this.openaiApiKey="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"}async fetchCurrentWeekSchedule(){try{const e=await this.tryFetchRealData();return e&&e.games.length>0?e:await this.generateScheduleWithLLM()}catch(e){return console.error("Error fetching schedule:",e),this.generateMockSchedule()}}async tryFetchRealData(){try{const e=await fetch("https://sports.core.api.espn.com/v2/sports/football/leagues/nfl/seasons/2025/types/2/weeks/1/events?lang=en&region=us");if(!e.ok)throw new Error(`ESPN API failed: ${e.status}`);const a=await e.json();if(a.items&&a.items.length>0)return{week:1,season:2025,games:a.items.slice(0,10).map((r,i)=>({id:r.id||`game-${i}`,name:r.name||"NFL Game",date:r.date||new Date().toISOString(),homeTeam:this.extractTeamName(r.name,"home")||"Home Team",awayTeam:this.extractTeamName(r.name,"away")||"Away Team",venue:"TBD",location:"TBD"})),lastUpdated:new Date().toISOString()}}catch(e){console.warn("Real data fetch failed, using LLM fallback:",e)}return null}async generateScheduleWithLLM(){var e,a;if(!this.openaiApiKey)return console.warn("No OpenAI API key, using mock data"),this.generateMockSchedule();try{const t=`Generate a realistic NFL schedule for Week ${this.getCurrentWeek()} of the 2025 season.
      Return ONLY a JSON array of games with this exact format:
      [
        {
          "id": "game-1",
          "name": "Team A at Team B",
          "date": "2025-09-15T20:20:00Z",
          "homeTeam": "Team B",
          "awayTeam": "Team A",
          "venue": "Stadium Name",
          "location": "City, State"
        }
      ]

      Include 10-14 realistic NFL games for this week. Use current NFL team names and realistic dates/times.`,r=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.openaiApiKey}`},body:JSON.stringify({model:"gpt-4",messages:[{role:"user",content:t}],temperature:.7,max_tokens:2e3})});if(!r.ok)throw new Error(`OpenAI API failed: ${r.status}`);const n=(a=(e=(await r.json()).choices[0])==null?void 0:e.message)==null?void 0:a.content;if(!n)throw new Error("No content from OpenAI");const l=JSON.parse(this.extractJSONFromResponse(n)).map((s,d)=>({id:s.id||`llm-game-${d}`,name:s.name||`${s.awayTeam} at ${s.homeTeam}`,date:s.date||new Date().toISOString(),homeTeam:s.homeTeam||"Home Team",awayTeam:s.awayTeam||"Away Team",venue:s.venue||"TBD",location:s.location||"TBD"}));return{week:this.getCurrentWeek(),season:2025,games:l,lastUpdated:new Date().toISOString()}}catch(t){return console.error("LLM generation failed:",t),this.generateMockSchedule()}}generateMockSchedule(){const e=[{id:"mock-1",name:"Kansas City Chiefs at Baltimore Ravens",date:"2025-09-15T20:20:00Z",homeTeam:"Baltimore Ravens",awayTeam:"Kansas City Chiefs",venue:"M&T Bank Stadium",location:"Baltimore, MD"},{id:"mock-2",name:"Buffalo Bills at Miami Dolphins",date:"2025-09-16T19:00:00Z",homeTeam:"Miami Dolphins",awayTeam:"Buffalo Bills",venue:"Hard Rock Stadium",location:"Miami Gardens, FL"},{id:"mock-3",name:"Detroit Lions at Tampa Bay Buccaneers",date:"2025-09-17T20:15:00Z",homeTeam:"Tampa Bay Buccaneers",awayTeam:"Detroit Lions",venue:"Raymond James Stadium",location:"Tampa, FL"},{id:"mock-4",name:"Philadelphia Eagles at Green Bay Packers",date:"2025-09-18T19:30:00Z",homeTeam:"Green Bay Packers",awayTeam:"Philadelphia Eagles",venue:"Lambeau Field",location:"Green Bay, WI"},{id:"mock-5",name:"San Francisco 49ers at Arizona Cardinals",date:"2025-09-19T20:05:00Z",homeTeam:"Arizona Cardinals",awayTeam:"San Francisco 49ers",venue:"State Farm Stadium",location:"Glendale, AZ"}];return{week:this.getCurrentWeek(),season:2025,games:e,lastUpdated:new Date().toISOString()}}getCurrentWeek(){const e=new Date,a=new Date("2025-09-04"),t=Math.floor((e.getTime()-a.getTime())/(1e3*60*60*24));return Math.max(1,Math.min(18,Math.floor(t/7)+1))}extractTeamName(e,a){if(!e)return null;const t=e.toLowerCase().indexOf(" at ");return t===-1?null:a==="away"?e.substring(0,t).trim():e.substring(t+4).trim()}extractJSONFromResponse(e){const a=e.match(/\[[\s\S]*\]/);if(a)return a[0];if(e.trim().startsWith("{")||e.trim().startsWith("["))return e.trim();throw new Error("No JSON found in LLM response")}async saveScheduleToDatabase(e){try{const{error:a}=await m.from("game_schedules").upsert({week:e.week,season:e.season,games:e.games,last_updated:e.lastUpdated},{onConflict:"week,season"});if(a)throw a}catch(a){throw console.error("Error saving schedule to database:",a),new Error(`Failed to save schedule: ${a instanceof Error?a.message:"Unknown error"}`)}}async loadScheduleFromDatabase(e,a=2025){try{const t=m.from("game_schedules").select("*").eq("season",a);e&&t.eq("week",e),t.order("last_updated",{ascending:!1}).limit(1);const{data:r,error:i}=await t;if(i)throw i;if(!r||r.length===0)return null;const n=r[0];return{week:n.week,season:n.season,games:n.games,lastUpdated:n.last_updated}}catch(t){return console.error("Error loading schedule from database:",t),null}}async getCurrentWeekGames(){try{let e=await this.loadScheduleFromDatabase();return(!e||this.isScheduleStale(e.lastUpdated))&&(e=await this.fetchCurrentWeekSchedule(),await this.saveScheduleToDatabase(e)),e.games}catch(e){return console.error("Error getting current week games:",e),[]}}isScheduleStale(e){const t=new Date(e).getTime();return new Date().getTime()-t>36e5}}const f=new w;export{f as llmSportsAPI};
